{
	// Place your kalt workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"arrow function": {
		"prefix": ["/arrow"],
		"body": "const $1 = async () => {\n\t$0\n}",
		"description": "a snippet to create a standard arrow function",
	},
	"for (i)": {
		"prefix": ["/for each"],
		"body": "for (let i = 0; i < $1; i++) {\n$0\n}",
		"description": "a snippet to create a standard arrow function",
	},
	"props": {
		"prefix": ["/add props"],
		"body": "const props = defineProps({\n\t\t$0: {\n\t\t\ttype: $1,\n\t\t\trequired: $2\n\t\t}\n\t})\n",
		"description": "a snippet to props",
	},
	"prop": {
		"prefix": ["/add prop"],
		"body": "$1: {\n\ttype: $2,\n\trequired: $3\n}",
		"description": "a snippet to add a single prop",
	},
	"scss": {
		"prefix": ["/scss"],
		"body": "<style scoped lang=\"scss\">\n$0\n</style>",
		"description": "the clamp",
	},
}

